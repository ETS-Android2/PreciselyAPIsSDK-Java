/**
 * Precisely APIs
 * Enhance & enrich your data, applications, business processes, and workflows with rich location, information, and identify APIs.
 *
 * OpenAPI spec version: 10.5.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.precisely.apis;

import com.precisely.ApiException;
import com.precisely.apis.model.GeoPropertyResponse;
import com.precisely.apis.model.GeoPropertyAddressRequest;
import com.precisely.apis.model.GeoPropertyResponses;
import com.precisely.apis.model.ParcelBoundary;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PropertyInformationServiceApi
 */
public class PropertyInformationServiceApiTest {

    private final PropertyInformationServiceApi api = new PropertyInformationServiceApi();

    
    /**
     * Get Property Attributes By Address
     *
     * Accepts address as input and returns property attributes for the matched address.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGeoPropertyByAddressTest() throws ApiException {
        String address = null;
        // GeoPropertyResponse response = api.getGeoPropertyByAddress(address);

        // TODO: test validations
    }
    
    /**
     * Post Property Attributes By Address
     *
     * This is a Batch offering for &#39;Property Attributes By Address&#39; service. It accepts a single address or a list of addresses and returns property attributes for the matched address.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGeoPropertyByAddressBatchTest() throws ApiException {
        GeoPropertyAddressRequest body = null;
        // GeoPropertyResponses response = api.getGeoPropertyByAddressBatch(body);

        // TODO: test validations
    }
    
    /**
     * Get Parcel Boundary By Address
     *
     * Accepts address as input and returns property parcel boundary around that address.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getParcelBoundaryByAddressTest() throws ApiException {
        String address = null;
        String accept = null;
        // ParcelBoundary response = api.getParcelBoundaryByAddress(address, accept);

        // TODO: test validations
    }
    
    /**
     * Get Parcel Boundary By Location
     *
     * Accepts latitude/longitude as input and returns property parcel boundary around that location.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getParcelBoundaryByLocationTest() throws ApiException {
        String longitude = null;
        String latitude = null;
        String accept = null;
        // ParcelBoundary response = api.getParcelBoundaryByLocation(longitude, latitude, accept);

        // TODO: test validations
    }
    
}
